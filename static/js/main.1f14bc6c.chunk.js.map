{"version":3,"sources":["components/PagesNavigator/PagesNavigator.module.scss","components/CharactersList/CharactersList.module.scss","components/CharDescription/CharDescription.module.scss","hooks/reduxTypedHooks.ts","api/api.ts","store/characterDetailsSlice.ts","components/CharDescription/CharDescription.tsx","store/listOfCharsSlice.ts","components/PagesNavigator/PagesNavigator.tsx","functions/getPossiblePagesPagination.ts","components/CharactersList/CharactersList.tsx","pages/Characters/Characters.tsx","pages/Home/Home.tsx","pages/NotFound/NotFound.tsx","components/Header/Header.tsx","components/App/App.tsx","store/index.ts","index.tsx"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","BASE_URL","getCharacters","numberPage","a","fetch","response","json","getCharacterById","id","loadCharacterById","createAsyncThunk","characterId","thunkAPI","dispatch","setIsDetailsLoading","characterDetails","createSlice","name","initialState","selectedCharacter","isDetailsLoading","reducers","setSelectedCharacter","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","selectors","CharDescription","React","memo","charId","dispath","isLoading","useEffect","className","role","styles","charDescription","src","image","alt","charDescription__image","species","gender","location","classNames","charDescription__listEpisodes","episode","map","split","status","created","loadCharactersPage","pageNumber","setIsListLoading","info","count","next","prev","pages","setPagesTotal","setCount","setNext","setPrev","results","listOfChars","charactersPage","isListLoading","pagesTotal","setCharacters","PagesNavigator","navigate","useNavigate","lastPage","searchParams","URLSearchParams","useLocation","search","currentPage","parseInt","get","useState","isNextDisabled","setIsNextDisabled","isPrevDisabled","setisPrevDisabled","displayedPages","useMemo","currentIndex","lastIndex","outerArr","start","Math","max","end","min","i","push","unshift","value","key","shortid","generate","getPossiblePagesPagination","back","useCallback","number","newNum","toString","set","setPage","pagination","pagination__btnWrap","pagination__btn","disabled","type","onClick","pagination__centerBtnsContainer","elem","pagination__btn_selected","CharactersList","useParams","pageOfCharacters","autocompleteValue","setAutocompleteValue","setSelectedCharacterInURL","getItemValue","character","items","renderItem","item","isHighlighted","style","background","onChange","e","target","shouldItemRender","toLowerCase","includes","toLocaleLowerCase","onSelect","_","characterList","characterList__contentContainer","characterList__image","characterList__aliveStatus__alive","characterList__aliveStatus__dead","characterList__aliveStatus__unknown","Characters","Home","NotFound","Header","to","App","path","element","replace","store","configureStore","reducer","listOfCharsReducer","characterDetailsReducer","ReactDOM","render","rootStore","document","getElementById"],"mappings":"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","file":"static/js/main.1f14bc6c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PagesNavigator_pagination__TNgZ4\",\"pagination__title\":\"PagesNavigator_pagination__title__1AHGw\",\"pagination__etc\":\"PagesNavigator_pagination__etc__2Mfwg\",\"pagination__btnWrap\":\"PagesNavigator_pagination__btnWrap__2kz94\",\"pagination__centerBtnsContainer\":\"PagesNavigator_pagination__centerBtnsContainer__3BZfZ\",\"pagination__btn\":\"PagesNavigator_pagination__btn__1TLq4\",\"pagination__btn_selected\":\"PagesNavigator_pagination__btn_selected__1giDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterList\":\"CharactersList_characterList__2yhOA\",\"characterList__contentContainer\":\"CharactersList_characterList__contentContainer__3BHYp\",\"characterList__image\":\"CharactersList_characterList__image__350X7\",\"characterList__aliveStatus__dead\":\"CharactersList_characterList__aliveStatus__dead__2Ilp5\",\"characterList__aliveStatus__alive\":\"CharactersList_characterList__aliveStatus__alive__3muIi\",\"characterList__aliveStatus__unknown\":\"CharactersList_characterList__aliveStatus__unknown__9w2D9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"charDescription\":\"CharDescription_charDescription__1jKH5\",\"charDescription__image\":\"CharDescription_charDescription__image__1DP6R\",\"charDescription__listEpisodes\":\"CharDescription_charDescription__listEpisodes__3yQI4\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { CharactersResponse } from '../types/CahractersResponse';\nimport { Character } from '../types/Character';\n\nexport const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const getCharacters = async (numberPage: string): Promise<CharactersResponse> => {\n  const response = await fetch(`${BASE_URL}/character/?page=${numberPage}`);\n\n  return response.json();\n};\n\nexport const getCharacterById = async (id: string): Promise<Character> => {\n  const response = await fetch(`${BASE_URL}/character/${id}`);\n\n  return response.json();\n};\n","// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { getCharacterById } from '../api/api';\nimport { Character } from '../types/Character';\n\ninterface ListOfCharsState {\n  selectedCharacter: Character | null;\n  isDetailsLoading: boolean;\n}\n\nconst initialState: ListOfCharsState = {\n  selectedCharacter: null,\n  isDetailsLoading: true,\n};\n\nexport const loadCharacterById = createAsyncThunk(\n  'characterDetails/fetchUserPostsById',\n  async (characterId: string, thunkAPI) => {\n    const { dispatch } = thunkAPI;\n\n    dispatch(setIsDetailsLoading(true));\n\n    const response = await getCharacterById(characterId);\n\n    dispatch(setIsDetailsLoading(false));\n\n    return response;\n  },\n);\n\nexport const characterDetails = createSlice({\n  name: 'listOfPosts',\n  initialState,\n  reducers: {\n    setSelectedCharacter: (state, action: PayloadAction<Character>) => {\n      state.selectedCharacter = action.payload;\n    },\n    setIsDetailsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isDetailsLoading = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadCharacterById.fulfilled, (state, action) => {\n      state.selectedCharacter = action.payload;\n    });\n  },\n});\n\nexport const {\n  setSelectedCharacter,\n  setIsDetailsLoading,\n} = characterDetails.actions;\n\nexport const selectors = {\n  getSelectedCharacter: (state: RootState) => state.characterDetails.selectedCharacter,\n  getIsDetailsLoading: (state: RootState) => state.characterDetails.isDetailsLoading,\n};\n\nexport default characterDetails.reducer;\n","import classNames from 'classnames';\nimport React, { useEffect } from 'react';\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from '../../hooks/reduxTypedHooks';\nimport {\n  selectors,\n  loadCharacterById,\n} from '../../store/characterDetailsSlice';\n\nimport styles from './CharDescription.module.scss';\n\ninterface Props {\n  charId: string;\n}\n\nexport const CharDescription: React.FC<Props> = React.memo(({ charId }) => {\n  const dispath = useDispatch();\n  const isLoading = useSelector(selectors.getIsDetailsLoading);\n  const selectedCharacter = useSelector(selectors.getSelectedCharacter);\n\n  useEffect(() => {\n    dispath(loadCharacterById(charId));\n  }, []);\n\n  return (\n    <>\n      {\n        isLoading && selectedCharacter ? (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          <div className={styles.charDescription}>\n            <h1>\n              {selectedCharacter?.name}\n            </h1>\n            <img\n              src={selectedCharacter?.image}\n              alt=\"Character\"\n              className={styles.charDescription__image}\n            />\n            <p>\n              <strong>\n                Species:\n              </strong>\n              &nbsp;\n              {selectedCharacter?.species}\n            </p>\n            <p>\n              <strong>\n                Gender:\n              </strong>\n              &nbsp;\n              {selectedCharacter?.gender}\n            </p>\n            <p>\n              <strong>\n                Location:\n              </strong>\n              &nbsp;\n              {selectedCharacter?.location.name}\n            </p>\n            <p>\n              <strong>\n                Episodes:\n              </strong>\n              &nbsp;\n            </p>\n            <div\n              className={\n                classNames(\n                  'album py-5 bg-light',\n                  styles.charDescription__listEpisodes,\n                )\n              }\n            >\n              {\n                selectedCharacter?.episode.map(episode => (\n                  <div key={episode}>\n                    {episode.split('/')[5]}\n                  </div>\n                ))\n              }\n            </div>\n            <p>\n              <strong>\n                Status:\n              </strong>\n              &nbsp;\n              {selectedCharacter?.status}\n            </p>\n            <p>\n              <strong>\n                Created:\n              </strong>\n              &nbsp;\n              {selectedCharacter?.created}\n            </p>\n          </div>\n        )\n      }\n    </>\n  );\n});\n","// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { getCharacters } from '../api/api';\nimport { Character } from '../types/Character';\n\ninterface ListOfCharsState {\n  charactersPage: Array<Character>;\n  isListLoading: boolean;\n  pagesTotal: number;\n  count: number;\n  next: string | null;\n  prev: string | null;\n}\n\nconst initialState: ListOfCharsState = {\n  charactersPage: [],\n  isListLoading: true,\n  pagesTotal: 0,\n  count: 0,\n  next: null,\n  prev: null,\n};\n\nexport const loadCharactersPage = createAsyncThunk(\n  'listOfChars/loadCharactersPage',\n  async (pageNumber: string, thunkAPI) => {\n    const { dispatch } = thunkAPI;\n\n    dispatch(setIsListLoading(true));\n\n    const response = await getCharacters(pageNumber);\n    const {\n      count,\n      next,\n      prev,\n      pages,\n    } = response.info;\n\n    dispatch(setPagesTotal(pages));\n    dispatch(setCount(count));\n    dispatch(setNext(next));\n    dispatch(setPrev(prev));\n\n    dispatch(setIsListLoading(false));\n\n    return response.results;\n  },\n);\n\nexport const listOfChars = createSlice({\n  name: 'listOfPosts',\n  initialState,\n  reducers: {\n    setCharacters: (state, action: PayloadAction<Array<Character>>) => {\n      state.charactersPage = action.payload;\n    },\n    setIsListLoading: (state, action: PayloadAction<boolean>) => {\n      state.isListLoading = action.payload;\n    },\n    setPagesTotal: (state, action: PayloadAction<number>) => {\n      state.pagesTotal = action.payload;\n    },\n    setNext: (state, action: PayloadAction<string | null>) => {\n      state.next = action.payload;\n    },\n    setPrev: (state, action: PayloadAction<string | null>) => {\n      state.prev = action.payload;\n    },\n    setCount: (state, action: PayloadAction<number>) => {\n      state.count = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadCharactersPage.fulfilled, (state, action) => {\n      state.charactersPage = action.payload;\n    });\n  },\n});\n\nexport const {\n  setCharacters,\n  setIsListLoading,\n  setPagesTotal,\n  setNext,\n  setPrev,\n  setCount,\n} = listOfChars.actions;\n\nexport const selectors = {\n  getCharactersPage: (state: RootState) => state.listOfChars.charactersPage,\n  getIsListLoading: (state: RootState) => state.listOfChars.isListLoading,\n  getPrev: (state: RootState) => state.listOfChars.prev,\n  getNext: (state: RootState) => state.listOfChars.next,\n  getPagesTotal: (state: RootState) => state.listOfChars.pagesTotal,\n  getCount: (state: RootState) => state.listOfChars.count,\n};\n\nexport default listOfChars.reducer;\n","import React, {\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport classNames from 'classnames';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  useAppSelector as useSelector,\n} from '../../hooks/reduxTypedHooks';\nimport {\n  selectors,\n} from '../../store/listOfCharsSlice';\nimport { getPossiblePagesPagination } from '../../functions/getPossiblePagesPagination';\n\nimport styles from './PagesNavigator.module.scss';\n\nexport const PagesNavigator: React.FC<{}> = memo(() => {\n  const navigate = useNavigate();\n  const lastPage = useSelector(selectors.getPagesTotal);\n  const searchParams = new URLSearchParams(useLocation().search);\n  // eslint-disable-next-line radix\n  const currentPage = parseInt((searchParams.get('page') || '1'));\n\n  const [isNextDisabled, setIsNextDisabled] = useState(false);\n  const [isPrevDisabled, setisPrevDisabled] = useState(false);\n\n  const displayedPages = useMemo(() => {\n    return getPossiblePagesPagination(currentPage, lastPage);\n  }, [lastPage, currentPage]);\n\n  useEffect(() => {\n    if (currentPage > 1) {\n      setisPrevDisabled(false);\n    } else {\n      setisPrevDisabled(true);\n    }\n\n    if (currentPage === lastPage) {\n      setIsNextDisabled(true);\n    } else {\n      setIsNextDisabled(false);\n    }\n  }, [currentPage]);\n\n  const back = useCallback((number) => {\n    const newNum = (number - 1).toString();\n\n    searchParams.set('page', newNum);\n    navigate(`?page=${newNum}`);\n  }, [navigate]);\n\n  const next = useCallback((number) => {\n    const newNum = (number + 1).toString();\n\n    searchParams.set('page', newNum);\n    navigate(`?page=${newNum}`);\n  }, []);\n\n  const setPage = useCallback((number) => {\n    const newNum = (number).toString();\n\n    searchParams.set('page', newNum);\n    navigate(`?page=${newNum}`);\n  }, []);\n\n  return (\n    <div className={styles.pagination}>\n      <div className={styles.pagination__btnWrap}>\n        <button\n          className={styles.pagination__btn}\n          disabled={isPrevDisabled}\n          type=\"button\"\n          onClick={() => {\n            back(currentPage);\n          }}\n        >\n          «\n        </button>\n\n        <div className={styles.pagination__centerBtnsContainer}>\n          {displayedPages.map(elem => {\n            if (elem.value === '...') {\n              return (\n                <p\n                  className=\"pagination__etc\"\n                  key={elem.key}\n                >\n                  {elem.value}\n                </p>\n              );\n            }\n\n            return (\n              <button\n                className={\n                  classNames(\n                    styles.pagination__btn,\n                    { [styles.pagination__btn_selected]: elem.value === currentPage },\n                  )\n                }\n                key={elem.key}\n                type=\"button\"\n                onClick={() => {\n                  setPage(elem.value);\n                }}\n              >\n                {elem.value}\n              </button>\n            );\n          })}\n        </div>\n\n        <button\n          className={styles.pagination__btn}\n          disabled={isNextDisabled}\n          type=\"button\"\n          onClick={() => {\n            next(currentPage);\n          }}\n        >\n          »\n        </button>\n      </div>\n    </div>\n  );\n});\n","import shortid from 'shortid';\n\nexport const getPossiblePagesPagination = (\n  currentIndex: number,\n  lastIndex: number,\n) => {\n  const outerArr = [];\n  const neighboorCount = 1;\n  const etcValue = '...';\n\n  const start = Math.max(2, (currentIndex - neighboorCount));\n  const end = Math.min((lastIndex - 1), (currentIndex + neighboorCount));\n\n  for (let i = start; i <= end; i += 1) {\n    outerArr.push(i);\n  }\n\n  if (currentIndex - neighboorCount > 2) {\n    outerArr.unshift(etcValue);\n  }\n\n  if (currentIndex + neighboorCount < lastIndex - 1) {\n    outerArr.push(etcValue);\n  }\n\n  if (lastIndex !== 1) {\n    outerArr.push(lastIndex);\n  }\n\n  outerArr.unshift(1);\n\n  return outerArr.map(value => ({\n    value,\n    key: shortid.generate(),\n  }));\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n/* eslint-disable react-hooks/rules-of-hooks */\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Autocomplete from 'react-autocomplete';\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from '../../hooks/reduxTypedHooks';\nimport { CharDescription } from '../CharDescription';\nimport {\n  selectors,\n  loadCharactersPage,\n} from '../../store/listOfCharsSlice';\nimport { Character } from '../../types/Character';\nimport { PagesNavigator } from '../PagesNavigator';\n\nimport styles from './CharactersList.module.scss';\n\nexport const CharactersList: React.FC<{}> = React.memo(() => {\n  const { charId } = useParams<{ charId: string }>();\n\n  const searchParams = new URLSearchParams(useLocation().search);\n  const currentPage = searchParams.get('page') || '1';\n\n  const navigate = useNavigate();\n  const dispath = useDispatch();\n  const isLoading = useSelector(selectors.getIsListLoading);\n  const pageOfCharacters = useSelector(selectors.getCharactersPage);\n  const [autocompleteValue, setAutocompleteValue] = useState('');\n\n  const setSelectedCharacterInURL = useCallback((id: string) => {\n    navigate(`/list/${id}`);\n  }, []);\n\n  useEffect(() => {\n    dispath(loadCharactersPage(currentPage));\n  }, [currentPage]);\n\n  if (charId) {\n    return (\n      <CharDescription charId={charId} />\n    );\n  }\n\n  return (\n    <div className=\"container-xl\">\n      {\n        isLoading ? (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          <>\n            <h1 className=\"d-flex justify-content-center\">\n              Characters List\n            </h1>\n            <div className=\"pb-4\">\n              <Autocomplete\n                getItemValue={(character) => character.name}\n                items={pageOfCharacters}\n                renderItem={(item, isHighlighted) => (\n                  <div\n                    style={{ background: isHighlighted ? 'lightgray' : 'white' }}\n                    key={item.id}\n                  >\n                    {item.name}\n                  </div>\n                )}\n                value={autocompleteValue}\n                onChange={(e) => setAutocompleteValue(e.target.value)}\n                shouldItemRender={(item: Character) => (\n                  item.name.toLowerCase().includes(autocompleteValue.toLocaleLowerCase()))}\n                onSelect={(_, item: Character) => {\n                  setAutocompleteValue('');\n                  setSelectedCharacterInURL(item.id.toString());\n                }}\n              />\n            </div>\n            <ul className={styles.characterList}>\n              {pageOfCharacters.map(character => (\n                <li key={character.id}>\n                  <div\n                    className={styles.characterList__contentContainer}\n                    onClick={() => (setSelectedCharacterInURL(character.id.toString()))}\n                  >\n                    <img\n                      className={styles.characterList__image}\n                      src={character.image}\n                      alt=\"Character\"\n                    />\n                    <h3>{character.name}</h3>\n                    <p\n                      className={\n                        classNames(\n                          'characterList__aliveStatus',\n                          {\n                            [styles.characterList__aliveStatus__alive]: character.status === 'Alive',\n                          },\n                          {\n                            [styles.characterList__aliveStatus__dead]: character.status === 'Dead',\n                          },\n                          {\n                            [styles.characterList__aliveStatus__unknown]: character.status === 'unknown',\n                          },\n                        )\n                      }\n                    >\n                      {character.status}\n                    </p>\n                  </div>\n                </li>\n              ))}\n            </ul>\n            <PagesNavigator />\n          </>\n        )\n      }\n    </div>\n  );\n});\n","import React from 'react';\nimport { CharactersList } from '../../components/CharactersList';\n\nexport const Characters: React.FC<{}> = React.memo(() => {\n  return (\n    <CharactersList />\n  );\n});\n","import React from 'react';\n\nexport const Home: React.FC<{}> = React.memo(() => {\n  return (\n    <div className=\"container text-center\">\n      <h1 className=\"p-b-3\">\n        Home Page\n      </h1>\n\n      <h2>\n        Created by Misha Kravtsov\n      </h2>\n    </div>\n  );\n});\n","import React from 'react';\n\nexport const NotFound: React.FC<{}> = React.memo(() => {\n  return (\n    <div className=\"container text-center\">\n      <h1>NOT FOUND PAGE</h1>\n    </div>\n  );\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header:React.FC<{}> = React.memo(() => {\n  return (\n    <nav>\n      <ul className=\"nav nav-tabs justify-content-center\">\n        <li className=\"nav-item\">\n          <NavLink to=\"/home\" className=\"nav-link\">\n            Home page\n          </NavLink>\n        </li>\n\n        <li className=\"nav-item\">\n          <NavLink to=\"/list\" className=\"nav-link\">\n            List of characters\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n});\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Characters } from '../../pages/Characters';\nimport { Home } from '../../pages/Home';\nimport { NotFound } from '../../pages/NotFound';\n// import { CharDescription } from '../CharDescription';\nimport { Header } from '../Header';\n\ninterface Props {\n  onClick: () => void;\n}\n\nexport const Provider: React.FC<Props> = React.memo(\n  ({ onClick, children }) => (\n    <button\n      type=\"button\"\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  ),\n);\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <Header />\n\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/home\" replace />} />\n        <Route path=\"/home\" element={<Home />} />\n\n        <Route path=\"/list/*\" element={<Characters />}>\n          <Route path=\":charId\" element={<Characters />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </>\n  );\n};\n","/* eslint-disable import/no-cycle */\nimport { configureStore } from '@reduxjs/toolkit';\nimport listOfCharsReducer from './listOfCharsSlice';\nimport characterDetailsReducer from './characterDetailsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    listOfChars: listOfCharsReducer,\n    characterDetails: characterDetailsReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './components/App';\nimport rootStore from './store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={rootStore}>\n      <StrictMode>\n        <App />\n      </StrictMode>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}