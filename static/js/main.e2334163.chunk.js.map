{"version":3,"sources":["components/PagesNavigator/PagesNavigator.module.scss","components/CharactersList/CharactersList.module.scss","hooks/reduxTypedHooks.ts","api/api.ts","store/characterDetailsSlice.ts","components/CharDescription/CharDescription.tsx","store/listOfCharsSlice.ts","components/PagesNavigator/PagesNavigator.tsx","functions/getPossiblePagesPagination.ts","components/CharactersList/CharactersList.tsx","pages/Characters/Characters.tsx","pages/Home/Home.tsx","pages/NotFound/NotFound.tsx","components/Header/Header.tsx","components/App/App.tsx","store/index.ts","index.tsx","components/CharDescription/CharDescription.module.scss"],"names":["module","exports","useAppDispatch","useDispatch","useAppSelector","useSelector","BASE_URL","getCharacters","numberPage","a","fetch","response","json","getCharacterById","id","getCharactersByName","name","ok","Error","loadCharacterById","createAsyncThunk","characterId","thunkAPI","dispatch","setIsDetailsLoading","characterDetails","createSlice","initialState","selectedCharacter","isDetailsLoading","reducers","setSelectedCharacter","state","action","payload","extraReducers","builder","addCase","fulfilled","actions","selectors","CharDescription","React","memo","charId","dispath","isLoading","navigate","useNavigate","useEffect","className","role","styles","charDescription","charDescription__title","charDescription__content","src","image","alt","charDescription__image","species","gender","location","classNames","charDescription__listEpisodes","episode","map","charDescription__listEpisodes_item","split","characterList__aliveStatus__alive","status","characterList__aliveStatus__dead","characterList__aliveStatus__unknown","created","type","closeBtn","onClick","aria-label","loadCharactersPage","pageNumber","info","count","next","prev","pages","setPagesTotal","setCount","setNext","setPrev","setIsListLoading","results","loadFilteredByNameChars","query","setIsFilterLoading","listOfChars","isFilterLoading","filteredByNameChars","charactersPage","isListLoading","pagesTotal","setCharacters","setFilteredByNameChars","PagesNavigator","lastPage","searchParams","URLSearchParams","useLocation","search","currentPage","parseInt","get","useState","isNextDisabled","setIsNextDisabled","isPrevDisabled","setisPrevDisabled","displayedPages","useMemo","currentIndex","lastIndex","outerArr","start","Math","max","end","min","i","push","unshift","value","key","shortid","generate","getPossiblePagesPagination","back","useCallback","number","newNum","toString","set","setPage","pagination","pagination__btnWrap","pagination__btn","disabled","pagination__centerBtnsContainer","elem","pagination__btn_selected","CharactersList","useParams","filteredChars","pageOfCharacters","currentQueryName","setCurrentQueryName","setSelectedCharacterInURL","applyQuery","debounce","newQuery","getItemValue","character","items","renderItem","item","isHighlighted","style","background","onChange","target","onSelect","_","aria-hidden","characterList","characterList__contentContainer","characterList__image","Characters","Home","NotFound","Header","to","App","path","element","replace","store","configureStore","reducer","listOfCharsReducer","characterDetailsReducer","ReactDOM","render","rootStore","document","getElementById"],"mappings":"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","file":"static/js/main.e2334163.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"PagesNavigator_pagination__TNgZ4\",\"pagination__title\":\"PagesNavigator_pagination__title__1AHGw\",\"pagination__etc\":\"PagesNavigator_pagination__etc__2Mfwg\",\"pagination__btnWrap\":\"PagesNavigator_pagination__btnWrap__2kz94\",\"pagination__centerBtnsContainer\":\"PagesNavigator_pagination__centerBtnsContainer__3BZfZ\",\"pagination__btn\":\"PagesNavigator_pagination__btn__1TLq4\",\"pagination__btn_selected\":\"PagesNavigator_pagination__btn_selected__1giDP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterList\":\"CharactersList_characterList__2yhOA\",\"characterList__contentContainer\":\"CharactersList_characterList__contentContainer__3BHYp\",\"characterList__image\":\"CharactersList_characterList__image__350X7\",\"characterList__aliveStatus__dead\":\"CharactersList_characterList__aliveStatus__dead__2Ilp5\",\"characterList__aliveStatus__alive\":\"CharactersList_characterList__aliveStatus__alive__3muIi\",\"characterList__aliveStatus__unknown\":\"CharactersList_characterList__aliveStatus__unknown__9w2D9\"};","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { CharactersResponse } from '../types/CahractersResponse';\nimport { Character } from '../types/Character';\n\nexport const BASE_URL = 'https://rickandmortyapi.com/api';\n\nexport const getCharacters = async (numberPage: string): Promise<CharactersResponse> => {\n  const response = await fetch(`${BASE_URL}/character/?page=${numberPage}`);\n\n  return response.json();\n};\n\nexport const getCharacterById = async (id: string): Promise<Character> => {\n  const response = await fetch(`${BASE_URL}/character/${id}`);\n\n  return response.json();\n};\n\nexport const getCharactersByName = async (name: string): Promise<CharactersResponse> => {\n  const response = await fetch(`${BASE_URL}/character/?name=${name}`);\n\n  if (response.ok) {\n    return response.json();\n  }\n\n  throw new Error('no mathches');\n};\n","// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { getCharacterById } from '../api/api';\nimport { Character } from '../types/Character';\n\ninterface ListOfCharsState {\n  selectedCharacter: Character | null;\n  isDetailsLoading: boolean;\n}\n\nconst initialState: ListOfCharsState = {\n  selectedCharacter: null,\n  isDetailsLoading: true,\n};\n\nexport const loadCharacterById = createAsyncThunk(\n  'characterDetails/fetchUserPostsById',\n  async (characterId: string, thunkAPI) => {\n    const { dispatch } = thunkAPI;\n\n    dispatch(setIsDetailsLoading(true));\n\n    const response = await getCharacterById(characterId);\n\n    dispatch(setIsDetailsLoading(false));\n\n    return response;\n  },\n);\n\nexport const characterDetails = createSlice({\n  name: 'listOfPosts',\n  initialState,\n  reducers: {\n    setSelectedCharacter: (state, action: PayloadAction<Character>) => {\n      state.selectedCharacter = action.payload;\n    },\n    setIsDetailsLoading: (state, action: PayloadAction<boolean>) => {\n      state.isDetailsLoading = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadCharacterById.fulfilled, (state, action) => {\n      state.selectedCharacter = action.payload;\n    });\n  },\n});\n\nexport const {\n  setSelectedCharacter,\n  setIsDetailsLoading,\n} = characterDetails.actions;\n\nexport const selectors = {\n  getSelectedCharacter: (state: RootState) => state.characterDetails.selectedCharacter,\n  getIsDetailsLoading: (state: RootState) => state.characterDetails.isDetailsLoading,\n};\n\nexport default characterDetails.reducer;\n","import classNames from 'classnames';\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from '../../hooks/reduxTypedHooks';\nimport {\n  selectors,\n  loadCharacterById,\n} from '../../store/characterDetailsSlice';\n\nimport styles from './CharDescription.module.scss';\n\ninterface Props {\n  charId: string;\n}\n\nexport const CharDescription: React.FC<Props> = React.memo(({ charId }) => {\n  const dispath = useDispatch();\n  const isLoading = useSelector(selectors.getIsDetailsLoading);\n  const selectedCharacter = useSelector(selectors.getSelectedCharacter);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    dispath(loadCharacterById(charId));\n  }, []);\n\n  return (\n    <>\n      {\n        isLoading && selectedCharacter ? (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          <div>\n            <div className={styles.charDescription}>\n              <h1 className={styles.charDescription__title}>\n                {selectedCharacter?.name}\n              </h1>\n              <div className={styles.charDescription__content}>\n                <img\n                  src={selectedCharacter?.image}\n                  alt=\"Character\"\n                  className={styles.charDescription__image}\n                />\n                <p>\n                  <strong>\n                    Species:\n                  </strong>\n                  &nbsp;\n                  {selectedCharacter?.species}\n                </p>\n                <p>\n                  <strong>\n                    Gender:\n                  </strong>\n                  &nbsp;\n                  {selectedCharacter?.gender}\n                </p>\n                <p>\n                  <strong>\n                    Location:\n                  </strong>\n                  &nbsp;\n                  {selectedCharacter?.location.name}\n                </p>\n                <p>\n                  <strong>\n                    Episodes:\n                  </strong>\n                  &nbsp;\n                </p>\n                <div\n                  className={\n                    classNames(\n                      styles.charDescription__listEpisodes,\n                    )\n                  }\n                >\n                  {\n                    selectedCharacter?.episode.map(episode => (\n                      <div key={episode} className={styles.charDescription__listEpisodes_item}>\n                        {episode.split('/')[5]}\n                      </div>\n                    ))\n                  }\n                </div>\n                <p>\n                  <strong>\n                    Status:\n                  </strong>\n                  &nbsp;\n                  <span\n                    className={\n                      classNames(\n                        'characterList__aliveStatus',\n                        {\n                          [styles.characterList__aliveStatus__alive]: selectedCharacter?.status === 'Alive',\n                        },\n                        {\n                          [styles.characterList__aliveStatus__dead]: selectedCharacter?.status === 'Dead',\n                        },\n                        {\n                          [styles.characterList__aliveStatus__unknown]: selectedCharacter?.status === 'unknown',\n                        },\n                      )\n                    }\n                  >\n                    {selectedCharacter?.status}\n                  </span>\n                </p>\n                <p>\n                  <strong>\n                    Created:\n                  </strong>\n                  &nbsp;\n                  {selectedCharacter?.created}\n                </p>\n              </div>\n            </div>\n            <button\n              type=\"button\"\n              className={\n                classNames(\n                  'btn-close btn-close-red',\n                  styles.closeBtn,\n                )\n              }\n              onClick={() => {\n                navigate(-1);\n              }}\n              aria-label=\"Close\"\n            >\n            </button>\n          </div>\n        )\n      }\n    </>\n  );\n});\n","// there I imported rootState from store because i use it in selectors for this inner state\n\n/* eslint-disable import/no-cycle */\n\n// Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n// doesn't actually mutate the state because it uses the Immer library,\n// which detects changes to a \"draft state\" and produces a brand new\n// immutable state based off those changes\n\n/* eslint-disable no-param-reassign */\n\n// i use action before initialization in thunk so i need it to off warning of linter\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\nimport { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from '.';\nimport { getCharacters, getCharactersByName } from '../api/api';\nimport { Character } from '../types/Character';\n\ninterface ListOfCharsState {\n  isFilterLoading: boolean;\n  filteredByNameChars: Array<Character>;\n  charactersPage: Array<Character>;\n  isListLoading: boolean;\n  pagesTotal: number;\n  count: number;\n  next: string | null;\n  prev: string | null;\n}\n\nconst initialState: ListOfCharsState = {\n  isFilterLoading: false,\n  filteredByNameChars: [],\n  charactersPage: [],\n  isListLoading: true,\n  pagesTotal: 0,\n  count: 0,\n  next: null,\n  prev: null,\n};\n\nexport const loadCharactersPage = createAsyncThunk(\n  'listOfChars/loadCharactersPage',\n  async (pageNumber: string, thunkAPI) => {\n    const { dispatch } = thunkAPI;\n\n    const response = await getCharacters(pageNumber);\n    const {\n      count,\n      next,\n      prev,\n      pages,\n    } = response.info;\n\n    dispatch(setPagesTotal(pages));\n    dispatch(setCount(count));\n    dispatch(setNext(next));\n    dispatch(setPrev(prev));\n\n    dispatch(setIsListLoading(false));\n\n    return response.results;\n  },\n);\n\nexport const loadFilteredByNameChars = createAsyncThunk(\n  'listOfChars/loadFilteredByNameChars',\n  async (query: string, thunkAPI) => {\n    const { dispatch } = thunkAPI;\n\n    dispatch(setIsFilterLoading(true));\n\n    try {\n      const response = await getCharactersByName(query);\n\n      return response.results;\n    } catch (e) {\n      return [];\n    } finally {\n      dispatch(setIsFilterLoading(false));\n    }\n  },\n);\n\nexport const listOfChars = createSlice({\n  name: 'listOfPosts',\n  initialState,\n  reducers: {\n    setCharacters: (state, action: PayloadAction<Array<Character>>) => {\n      state.charactersPage = action.payload;\n    },\n    setIsListLoading: (state, action: PayloadAction<boolean>) => {\n      state.isListLoading = action.payload;\n    },\n    setPagesTotal: (state, action: PayloadAction<number>) => {\n      state.pagesTotal = action.payload;\n    },\n    setNext: (state, action: PayloadAction<string | null>) => {\n      state.next = action.payload;\n    },\n    setPrev: (state, action: PayloadAction<string | null>) => {\n      state.prev = action.payload;\n    },\n    setCount: (state, action: PayloadAction<number>) => {\n      state.count = action.payload;\n    },\n    setIsFilterLoading: (state, action: PayloadAction<boolean>) => {\n      state.isFilterLoading = action.payload;\n    },\n    setFilteredByNameChars: (state, action: PayloadAction<Array<Character>>) => {\n      state.filteredByNameChars = action.payload;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadCharactersPage.fulfilled, (state, action) => {\n        state.charactersPage = action.payload;\n      })\n      .addCase(loadFilteredByNameChars.fulfilled, (state, action) => {\n        state.filteredByNameChars = action.payload;\n      });\n  },\n});\n\nexport const {\n  setCharacters,\n  setIsListLoading,\n  setPagesTotal,\n  setNext,\n  setPrev,\n  setCount,\n  setIsFilterLoading,\n  setFilteredByNameChars,\n} = listOfChars.actions;\n\nexport const selectors = {\n  getCharactersPage: (state: RootState) => state.listOfChars.charactersPage,\n  getIsListLoading: (state: RootState) => state.listOfChars.isListLoading,\n  getPrev: (state: RootState) => state.listOfChars.prev,\n  getNext: (state: RootState) => state.listOfChars.next,\n  getPagesTotal: (state: RootState) => state.listOfChars.pagesTotal,\n  getCount: (state: RootState) => state.listOfChars.count,\n  getFilteredByNameChars: (state: RootState) => state.listOfChars.filteredByNameChars,\n  getIsFilterLoading: (state: RootState) => state.listOfChars.isFilterLoading,\n};\n\nexport default listOfChars.reducer;\n","import React, {\n  memo,\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport classNames from 'classnames';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport {\n  useAppSelector as useSelector,\n} from '../../hooks/reduxTypedHooks';\nimport {\n  selectors,\n} from '../../store/listOfCharsSlice';\nimport { getPossiblePagesPagination } from '../../functions/getPossiblePagesPagination';\n\nimport styles from './PagesNavigator.module.scss';\n\nexport const PagesNavigator: React.FC<{}> = memo(() => {\n  const navigate = useNavigate();\n  const lastPage = useSelector(selectors.getPagesTotal);\n  const searchParams = new URLSearchParams(useLocation().search);\n  // eslint-disable-next-line radix\n  const currentPage = parseInt((searchParams.get('page') || '1'));\n\n  const [isNextDisabled, setIsNextDisabled] = useState(false);\n  const [isPrevDisabled, setisPrevDisabled] = useState(false);\n\n  const displayedPages = useMemo(() => {\n    return getPossiblePagesPagination(currentPage, lastPage);\n  }, [lastPage, currentPage]);\n\n  useEffect(() => {\n    if (currentPage > 1) {\n      setisPrevDisabled(false);\n    } else {\n      setisPrevDisabled(true);\n    }\n\n    if (currentPage === lastPage) {\n      setIsNextDisabled(true);\n    } else {\n      setIsNextDisabled(false);\n    }\n  }, [currentPage]);\n\n  const back = useCallback((number) => {\n    const newNum = (number - 1).toString();\n\n    searchParams.set('page', newNum);\n    navigate(`?page=${newNum}`);\n  }, [navigate]);\n\n  const next = useCallback((number) => {\n    const newNum = (number + 1).toString();\n\n    searchParams.set('page', newNum);\n    navigate(`?page=${newNum}`);\n  }, []);\n\n  const setPage = useCallback((number) => {\n    const newNum = (number).toString();\n\n    searchParams.set('page', newNum);\n    navigate(`?page=${newNum}`);\n  }, []);\n\n  return (\n    <div className={styles.pagination}>\n      <div className={styles.pagination__btnWrap}>\n        <button\n          className={styles.pagination__btn}\n          disabled={isPrevDisabled}\n          type=\"button\"\n          onClick={() => {\n            back(currentPage);\n          }}\n        >\n          «\n        </button>\n\n        <div className={styles.pagination__centerBtnsContainer}>\n          {displayedPages.map(elem => {\n            if (elem.value === '...') {\n              return (\n                <p\n                  className=\"pagination__etc\"\n                  key={elem.key}\n                >\n                  {elem.value}\n                </p>\n              );\n            }\n\n            return (\n              <button\n                className={\n                  classNames(\n                    styles.pagination__btn,\n                    { [styles.pagination__btn_selected]: elem.value === currentPage },\n                  )\n                }\n                key={elem.key}\n                type=\"button\"\n                onClick={() => {\n                  setPage(elem.value);\n                }}\n              >\n                {elem.value}\n              </button>\n            );\n          })}\n        </div>\n\n        <button\n          className={styles.pagination__btn}\n          disabled={isNextDisabled}\n          type=\"button\"\n          onClick={() => {\n            next(currentPage);\n          }}\n        >\n          »\n        </button>\n      </div>\n    </div>\n  );\n});\n","import shortid from 'shortid';\n\nexport const getPossiblePagesPagination = (\n  currentIndex: number,\n  lastIndex: number,\n) => {\n  const outerArr = [];\n  const neighboorCount = 1;\n  const etcValue = '...';\n\n  const start = Math.max(2, (currentIndex - neighboorCount));\n  const end = Math.min((lastIndex - 1), (currentIndex + neighboorCount));\n\n  for (let i = start; i <= end; i += 1) {\n    outerArr.push(i);\n  }\n\n  if (currentIndex - neighboorCount > 2) {\n    outerArr.unshift(etcValue);\n  }\n\n  if (currentIndex + neighboorCount < lastIndex - 1) {\n    outerArr.push(etcValue);\n  }\n\n  if (lastIndex !== 1) {\n    outerArr.push(lastIndex);\n  }\n\n  outerArr.unshift(1);\n\n  return outerArr.map(value => ({\n    value,\n    key: shortid.generate(),\n  }));\n};\n","/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\n\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport Autocomplete from 'react-autocomplete';\nimport debounce from 'lodash/debounce';\nimport {\n  useAppSelector as useSelector,\n  useAppDispatch as useDispatch,\n} from '../../hooks/reduxTypedHooks';\nimport { CharDescription } from '../CharDescription';\nimport {\n  selectors,\n  loadCharactersPage,\n  loadFilteredByNameChars,\n  setFilteredByNameChars,\n} from '../../store/listOfCharsSlice';\nimport { Character } from '../../types/Character';\nimport { PagesNavigator } from '../PagesNavigator';\n\nimport styles from './CharactersList.module.scss';\n\nexport const CharactersList: React.FC<{}> = React.memo(() => {\n  const { charId } = useParams<{ charId: string }>();\n\n  const searchParams = new URLSearchParams(useLocation().search);\n  const currentPage = searchParams.get('page') || '1';\n\n  const navigate = useNavigate();\n  const dispath = useDispatch();\n  const isLoading = useSelector(selectors.getIsListLoading);\n  const isFilterLoading = useSelector(selectors.getIsFilterLoading);\n  const filteredChars = useSelector(selectors.getFilteredByNameChars);\n  const pageOfCharacters = useSelector(selectors.getCharactersPage);\n  const [currentQueryName, setCurrentQueryName] = useState('');\n\n  const setSelectedCharacterInURL = useCallback((id: string) => {\n    navigate(`/list/${id}`);\n  }, []);\n\n  const applyQuery = useCallback(\n    debounce((newQuery: string) => {\n      if (newQuery) {\n        dispath(loadFilteredByNameChars(newQuery));\n      } else {\n        dispath(setFilteredByNameChars([]));\n      }\n    }, 300), [],\n  );\n\n  useEffect(() => {\n    dispath(loadCharactersPage(currentPage));\n  }, [currentPage]);\n\n  if (charId) {\n    return (\n      <CharDescription charId={charId} />\n    );\n  }\n\n  return (\n    <div className=\"container-xl\">\n      {\n        isLoading ? (\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"spinner-border\" role=\"status\">\n              <span className=\"visually-hidden\">Loading...</span>\n            </div>\n          </div>\n        ) : (\n          <>\n            <h1 className=\"d-flex justify-content-center\">\n              Characters List\n            </h1>\n            <div className=\"container d-flex pb-4\">\n              <Autocomplete\n                getItemValue={(character) => character.name}\n                items={filteredChars}\n                renderItem={(item, isHighlighted) => (\n                  <div\n                    style={{ background: isHighlighted ? 'lightgray' : 'white' }}\n                    key={item.id}\n                  >\n                    {item.name}\n                  </div>\n                )}\n                value={currentQueryName}\n                onChange={({ target }) => {\n                  setCurrentQueryName(target.value);\n                  applyQuery(target.value);\n                }}\n                onSelect={(_, item: Character) => {\n                  setCurrentQueryName('');\n                  applyQuery('');\n                  setSelectedCharacterInURL(item.id.toString());\n                }}\n              />\n              {\n                isFilterLoading && (\n                  <div className=\"d-flex align-items-center\">\n                    <strong>Loading...</strong>\n                    <div className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></div>\n                  </div>\n                )\n              }\n            </div>\n            <div className=\"container\">\n              <ul className={styles.characterList}>\n                {pageOfCharacters.map(character => (\n                  <li key={character.id}>\n                    <div\n                      className={styles.characterList__contentContainer}\n                      onClick={() => (setSelectedCharacterInURL(character.id.toString()))}\n                    >\n                      <img\n                        className={styles.characterList__image}\n                        src={character.image}\n                        alt=\"Character\"\n                      />\n                      <h3>{character.name}</h3>\n                      <p\n                        className={\n                          classNames(\n                            'characterList__aliveStatus',\n                            {\n                              [styles.characterList__aliveStatus__alive]: character.status === 'Alive',\n                            },\n                            {\n                              [styles.characterList__aliveStatus__dead]: character.status === 'Dead',\n                            },\n                            {\n                              [styles.characterList__aliveStatus__unknown]: character.status === 'unknown',\n                            },\n                          )\n                        }\n                      >\n                        {character.status}\n                      </p>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n              <PagesNavigator />\n            </div>\n          </>\n        )\n      }\n    </div>\n  );\n});\n","import React from 'react';\nimport { CharactersList } from '../../components/CharactersList';\n\nexport const Characters: React.FC<{}> = React.memo(() => {\n  return (\n    <CharactersList />\n  );\n});\n","import React from 'react';\n\nexport const Home: React.FC<{}> = React.memo(() => {\n  return (\n    <div className=\"container text-center home-page\">\n      <h1 className=\"p-b-4\">\n        Home Page\n      </h1>\n\n      <h2>\n        Created by Misha Kravtsov\n      </h2>\n    </div>\n  );\n});\n","import React from 'react';\n\nexport const NotFound: React.FC<{}> = React.memo(() => {\n  return (\n    <div className=\"container text-center\">\n      <h1>NOT FOUND PAGE</h1>\n    </div>\n  );\n});\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nexport const Header:React.FC<{}> = React.memo(() => {\n  return (\n    <nav>\n      <ul className=\"nav nav-pills justify-content-center navbar-inverse\">\n        <li className=\"nav-item\">\n          <NavLink to=\"/home\" className=\"nav-link\">\n            Home page\n          </NavLink>\n        </li>\n\n        <li className=\"nav-item\">\n          <NavLink to=\"/list\" className=\"nav-link\">\n            List of characters\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n});\n","import React from 'react';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { Characters } from '../../pages/Characters';\nimport { Home } from '../../pages/Home';\nimport { NotFound } from '../../pages/NotFound';\n// import { CharDescription } from '../CharDescription';\nimport { Header } from '../Header';\n\ninterface Props {\n  onClick: () => void;\n}\n\nexport const Provider: React.FC<Props> = React.memo(\n  ({ onClick, children }) => (\n    <button\n      type=\"button\"\n      onClick={onClick}\n    >\n      {children}\n    </button>\n  ),\n);\n\nexport const App: React.FC = () => {\n  return (\n    <>\n      <Header />\n\n      <Routes>\n        <Route path=\"/\" element={<Navigate to=\"/home\" replace />} />\n        <Route path=\"/home\" element={<Home />} />\n\n        <Route path=\"/list/*\" element={<Characters />}>\n          <Route path=\":charId\" element={<Characters />} />\n        </Route>\n\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n    </>\n  );\n};\n","/* eslint-disable import/no-cycle */\nimport { configureStore } from '@reduxjs/toolkit';\nimport listOfCharsReducer from './listOfCharsSlice';\nimport characterDetailsReducer from './characterDetailsSlice';\n\nexport const store = configureStore({\n  reducer: {\n    listOfChars: listOfCharsReducer,\n    characterDetails: characterDetailsReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n\nexport default store;\n","import React, { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './components/App';\nimport rootStore from './store';\n\nimport './index.scss';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={rootStore}>\n      <StrictMode>\n        <App />\n      </StrictMode>\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"characterList\":\"CharDescription_characterList__32S5z\",\"characterList__contentContainer\":\"CharDescription_characterList__contentContainer__2ahnS\",\"characterList__image\":\"CharDescription_characterList__image__1gEk6\",\"characterList__aliveStatus__dead\":\"CharDescription_characterList__aliveStatus__dead__3jWWd\",\"characterList__aliveStatus__alive\":\"CharDescription_characterList__aliveStatus__alive__1uHks\",\"characterList__aliveStatus__unknown\":\"CharDescription_characterList__aliveStatus__unknown__g2g-_\",\"charDescription\":\"CharDescription_charDescription__1jKH5\",\"charDescription__content\":\"CharDescription_charDescription__content__3IQKW\",\"charDescription__image\":\"CharDescription_charDescription__image__1DP6R\",\"charDescription__listEpisodes\":\"CharDescription_charDescription__listEpisodes__3yQI4\",\"charDescription__listEpisodes_item\":\"CharDescription_charDescription__listEpisodes_item__1-zxX\",\"closeBtn\":\"CharDescription_closeBtn__3G5Av\"};"],"sourceRoot":""}